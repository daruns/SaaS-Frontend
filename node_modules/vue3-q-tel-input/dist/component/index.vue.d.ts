import { Country } from './types';
import { PhoneNumber } from 'google-libphonenumber';
import { Ref } from '@vue/runtime-core';
declare const _default: import("@vue/runtime-core").DefineComponent<{
    tel: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => string;
    };
    required: {
        type: BooleanConstructor;
        default: () => string;
    };
    searchText: {
        type: StringConstructor;
        default: () => string;
    };
    dropdownOptions: {
        type: ObjectConstructor;
        default: () => {};
    };
    defaultCountry: {
        type: StringConstructor;
        default: () => string;
    };
}, {
    country: Ref<Country>;
    old_country: Ref<Country | undefined>;
    number: Ref<string>;
    has_error: Ref<boolean>;
    prev_value: Ref<string>;
    phone_number: Ref<PhoneNumber | undefined>;
}, unknown, {}, {
    getNumber(instance: PhoneNumber): string;
    setPhone(): void;
    phoneChanged(val: string): void;
    countryChanged(val?: string | undefined, force?: boolean | undefined): void;
}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, ("update:tel" | "input" | "error")[], "update:tel" | "input" | "error", import("@vue/runtime-core").VNodeProps & import("@vue/runtime-core").AllowedComponentProps & import("@vue/runtime-core").ComponentCustomProps, Readonly<{
    tel?: unknown;
    required?: unknown;
    searchText?: unknown;
    dropdownOptions?: unknown;
    defaultCountry?: unknown;
} & {
    tel: string | number;
    required: boolean;
    searchText: string;
    dropdownOptions: Record<string, any>;
    defaultCountry: string;
} & {}>, {
    tel: string | number;
    required: boolean;
    searchText: string;
    dropdownOptions: Record<string, any>;
    defaultCountry: string;
}>;
export default _default;
